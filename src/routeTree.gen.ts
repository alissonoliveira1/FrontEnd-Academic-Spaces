/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as AuthSignInImport } from './routes/auth/sign-in'
import { Route as appDashboardRouteImport } from './routes/(app)/dashboard/route'
import { Route as appDashboardAdminIndexImport } from './routes/(app)/dashboard/admin/index'
import { Route as appDashboardTeacherMyReservationsImport } from './routes/(app)/dashboard/teacher/my-reservations'
import { Route as appDashboardAdminUsersImport } from './routes/(app)/dashboard/admin/users'
import { Route as appDashboardAdminSpacesImport } from './routes/(app)/dashboard/admin/spaces'
import { Route as appDashboardAdminSchoolsImport } from './routes/(app)/dashboard/admin/schools'
import { Route as appDashboardAdminReservationsImport } from './routes/(app)/dashboard/admin/reservations'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignInRoute = AuthSignInImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const appDashboardRouteRoute = appDashboardRouteImport.update({
  id: '/(app)/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const appDashboardAdminIndexRoute = appDashboardAdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => appDashboardRouteRoute,
} as any)

const appDashboardTeacherMyReservationsRoute =
  appDashboardTeacherMyReservationsImport.update({
    id: '/teacher/my-reservations',
    path: '/teacher/my-reservations',
    getParentRoute: () => appDashboardRouteRoute,
  } as any)

const appDashboardAdminUsersRoute = appDashboardAdminUsersImport.update({
  id: '/admin/users',
  path: '/admin/users',
  getParentRoute: () => appDashboardRouteRoute,
} as any)

const appDashboardAdminSpacesRoute = appDashboardAdminSpacesImport.update({
  id: '/admin/spaces',
  path: '/admin/spaces',
  getParentRoute: () => appDashboardRouteRoute,
} as any)

const appDashboardAdminSchoolsRoute = appDashboardAdminSchoolsImport.update({
  id: '/admin/schools',
  path: '/admin/schools',
  getParentRoute: () => appDashboardRouteRoute,
} as any)

const appDashboardAdminReservationsRoute =
  appDashboardAdminReservationsImport.update({
    id: '/admin/reservations',
    path: '/admin/reservations',
    getParentRoute: () => appDashboardRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)/dashboard': {
      id: '/(app)/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof appDashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof rootRoute
    }
    '/(app)/dashboard/admin/reservations': {
      id: '/(app)/dashboard/admin/reservations'
      path: '/admin/reservations'
      fullPath: '/dashboard/admin/reservations'
      preLoaderRoute: typeof appDashboardAdminReservationsImport
      parentRoute: typeof appDashboardRouteImport
    }
    '/(app)/dashboard/admin/schools': {
      id: '/(app)/dashboard/admin/schools'
      path: '/admin/schools'
      fullPath: '/dashboard/admin/schools'
      preLoaderRoute: typeof appDashboardAdminSchoolsImport
      parentRoute: typeof appDashboardRouteImport
    }
    '/(app)/dashboard/admin/spaces': {
      id: '/(app)/dashboard/admin/spaces'
      path: '/admin/spaces'
      fullPath: '/dashboard/admin/spaces'
      preLoaderRoute: typeof appDashboardAdminSpacesImport
      parentRoute: typeof appDashboardRouteImport
    }
    '/(app)/dashboard/admin/users': {
      id: '/(app)/dashboard/admin/users'
      path: '/admin/users'
      fullPath: '/dashboard/admin/users'
      preLoaderRoute: typeof appDashboardAdminUsersImport
      parentRoute: typeof appDashboardRouteImport
    }
    '/(app)/dashboard/teacher/my-reservations': {
      id: '/(app)/dashboard/teacher/my-reservations'
      path: '/teacher/my-reservations'
      fullPath: '/dashboard/teacher/my-reservations'
      preLoaderRoute: typeof appDashboardTeacherMyReservationsImport
      parentRoute: typeof appDashboardRouteImport
    }
    '/(app)/dashboard/admin/': {
      id: '/(app)/dashboard/admin/'
      path: '/admin'
      fullPath: '/dashboard/admin'
      preLoaderRoute: typeof appDashboardAdminIndexImport
      parentRoute: typeof appDashboardRouteImport
    }
  }
}

// Create and export the route tree

interface appDashboardRouteRouteChildren {
  appDashboardAdminReservationsRoute: typeof appDashboardAdminReservationsRoute
  appDashboardAdminSchoolsRoute: typeof appDashboardAdminSchoolsRoute
  appDashboardAdminSpacesRoute: typeof appDashboardAdminSpacesRoute
  appDashboardAdminUsersRoute: typeof appDashboardAdminUsersRoute
  appDashboardTeacherMyReservationsRoute: typeof appDashboardTeacherMyReservationsRoute
  appDashboardAdminIndexRoute: typeof appDashboardAdminIndexRoute
}

const appDashboardRouteRouteChildren: appDashboardRouteRouteChildren = {
  appDashboardAdminReservationsRoute: appDashboardAdminReservationsRoute,
  appDashboardAdminSchoolsRoute: appDashboardAdminSchoolsRoute,
  appDashboardAdminSpacesRoute: appDashboardAdminSpacesRoute,
  appDashboardAdminUsersRoute: appDashboardAdminUsersRoute,
  appDashboardTeacherMyReservationsRoute:
    appDashboardTeacherMyReservationsRoute,
  appDashboardAdminIndexRoute: appDashboardAdminIndexRoute,
}

const appDashboardRouteRouteWithChildren =
  appDashboardRouteRoute._addFileChildren(appDashboardRouteRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof appDashboardRouteRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/dashboard/admin/reservations': typeof appDashboardAdminReservationsRoute
  '/dashboard/admin/schools': typeof appDashboardAdminSchoolsRoute
  '/dashboard/admin/spaces': typeof appDashboardAdminSpacesRoute
  '/dashboard/admin/users': typeof appDashboardAdminUsersRoute
  '/dashboard/teacher/my-reservations': typeof appDashboardTeacherMyReservationsRoute
  '/dashboard/admin': typeof appDashboardAdminIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof appDashboardRouteRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/dashboard/admin/reservations': typeof appDashboardAdminReservationsRoute
  '/dashboard/admin/schools': typeof appDashboardAdminSchoolsRoute
  '/dashboard/admin/spaces': typeof appDashboardAdminSpacesRoute
  '/dashboard/admin/users': typeof appDashboardAdminUsersRoute
  '/dashboard/teacher/my-reservations': typeof appDashboardTeacherMyReservationsRoute
  '/dashboard/admin': typeof appDashboardAdminIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(app)/dashboard': typeof appDashboardRouteRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/(app)/dashboard/admin/reservations': typeof appDashboardAdminReservationsRoute
  '/(app)/dashboard/admin/schools': typeof appDashboardAdminSchoolsRoute
  '/(app)/dashboard/admin/spaces': typeof appDashboardAdminSpacesRoute
  '/(app)/dashboard/admin/users': typeof appDashboardAdminUsersRoute
  '/(app)/dashboard/teacher/my-reservations': typeof appDashboardTeacherMyReservationsRoute
  '/(app)/dashboard/admin/': typeof appDashboardAdminIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/auth/sign-in'
    | '/dashboard/admin/reservations'
    | '/dashboard/admin/schools'
    | '/dashboard/admin/spaces'
    | '/dashboard/admin/users'
    | '/dashboard/teacher/my-reservations'
    | '/dashboard/admin'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/auth/sign-in'
    | '/dashboard/admin/reservations'
    | '/dashboard/admin/schools'
    | '/dashboard/admin/spaces'
    | '/dashboard/admin/users'
    | '/dashboard/teacher/my-reservations'
    | '/dashboard/admin'
  id:
    | '__root__'
    | '/'
    | '/(app)/dashboard'
    | '/auth/sign-in'
    | '/(app)/dashboard/admin/reservations'
    | '/(app)/dashboard/admin/schools'
    | '/(app)/dashboard/admin/spaces'
    | '/(app)/dashboard/admin/users'
    | '/(app)/dashboard/teacher/my-reservations'
    | '/(app)/dashboard/admin/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  appDashboardRouteRoute: typeof appDashboardRouteRouteWithChildren
  AuthSignInRoute: typeof AuthSignInRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  appDashboardRouteRoute: appDashboardRouteRouteWithChildren,
  AuthSignInRoute: AuthSignInRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(app)/dashboard",
        "/auth/sign-in"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(app)/dashboard": {
      "filePath": "(app)/dashboard/route.tsx",
      "children": [
        "/(app)/dashboard/admin/reservations",
        "/(app)/dashboard/admin/schools",
        "/(app)/dashboard/admin/spaces",
        "/(app)/dashboard/admin/users",
        "/(app)/dashboard/teacher/my-reservations",
        "/(app)/dashboard/admin/"
      ]
    },
    "/auth/sign-in": {
      "filePath": "auth/sign-in.tsx"
    },
    "/(app)/dashboard/admin/reservations": {
      "filePath": "(app)/dashboard/admin/reservations.tsx",
      "parent": "/(app)/dashboard"
    },
    "/(app)/dashboard/admin/schools": {
      "filePath": "(app)/dashboard/admin/schools.tsx",
      "parent": "/(app)/dashboard"
    },
    "/(app)/dashboard/admin/spaces": {
      "filePath": "(app)/dashboard/admin/spaces.tsx",
      "parent": "/(app)/dashboard"
    },
    "/(app)/dashboard/admin/users": {
      "filePath": "(app)/dashboard/admin/users.tsx",
      "parent": "/(app)/dashboard"
    },
    "/(app)/dashboard/teacher/my-reservations": {
      "filePath": "(app)/dashboard/teacher/my-reservations.tsx",
      "parent": "/(app)/dashboard"
    },
    "/(app)/dashboard/admin/": {
      "filePath": "(app)/dashboard/admin/index.tsx",
      "parent": "/(app)/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
